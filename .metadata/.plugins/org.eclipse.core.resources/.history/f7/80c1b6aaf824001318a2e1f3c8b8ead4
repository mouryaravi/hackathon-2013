package com.example.smartalarm;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.provider.AlarmClock;
import android.util.Log;
import android.widget.Toast;

public class EventReceiver extends BroadcastReceiver{

	PendingIntent pi; 
	SharedPreferences sharedPerf;
	

	public void onReceive(Context context, Intent intent) {
		
		Log.d(this.getClass().getName(), "SMARTALARM: OnReceive ");
	
		if(intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED )) {			
			Toast.makeText(context, "Smart Alarm after BOOT " , Toast.LENGTH_LONG).show();		
			
			
			sharedPerf = context.getSharedPreferences(MainActivity.APPLICATION_SHARED_PREF_NAME, Context.MODE_PRIVATE);
			
			String timeGapString = sharedPerf.getString(MainActivity.APPLICATION_TIME_STRING_KEY, "3");
			
			boolean isSmartAlarmIsOn = sharedPerf.getBoolean(MainActivity.APPLICATION_TIME_SET_FLAG_KEY, false);
		
			int timeGap = 1; 
			
			try 
			{
				timeGap = Integer.parseInt(timeGapString);
			}
			catch(Exception e) {
				
			}
			
			if(pi == null && isSmartAlarmIsOn) {
				AlarmManager am=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
				Intent i = new Intent(context, AlarmClock.class);
				PendingIntent pi = PendingIntent.getBroadcast(context, 0, i, 0);
				am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 1000 * 60 * timeGap, pi); 
				am.set(AlarmManager.RTC_WAKEUP, 1000 * 60 * 4, pi);
				Toast.makeText(context, "Start Smart Alarm" , Toast.LENGTH_LONG).show();
				Log.d(this.getClass().getName(), " New Alarm is set ");
			}

			
		}
		else if(intent.getAction().equals(Intent.ACTION_REBOOT )) {			
			Toast.makeText(context, "Smart Alarm REBOOT action started " , Toast.LENGTH_LONG).show();			
		}
		else if(intent.getAction().equals(Intent.ACTION_SCREEN_OFF)) {
			Toast.makeText(context, "Start Alarm Back" , Toast.LENGTH_LONG).show();
			
			
			sharedPerf = context.getSharedPreferences(MainActivity.APPLICATION_SHARED_PREF_NAME, Context.MODE_PRIVATE);
			
			String timeGapString = sharedPerf.getString(MainActivity.APPLICATION_TIME_STRING_KEY, "3");
			
			boolean isSmartAlarmIsOn = sharedPerf.getBoolean(MainActivity.APPLICATION_TIME_SET_FLAG_KEY, false);
		
			int timeGap = 1; 
			
			try 
			{
				timeGap = Integer.parseInt(timeGapString);
			}
			catch(Exception e) {
				
			}
			
			if(pi == null && isSmartAlarmIsOn) {
				AlarmManager am=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
				Intent i = new Intent(context, AlarmClock.class);
				PendingIntent pi = PendingIntent.getBroadcast(context, 0, i, 0);
				am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 1000 * 60 * timeGap, pi); 
				am.set(AlarmManager.RTC_WAKEUP, 1000 * 60 * 4, pi);
				Toast.makeText(context, "Start Smart Alarm" , Toast.LENGTH_LONG).show();
				Log.d(this.getClass().getName(), " New Alarm is set ");
			}
			
		}
		else if(intent.getAction().equals(Intent.ACTION_SCREEN_ON)) {
			
			if(pi != null) {
				AlarmManager am=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
				am.cancel(pi);
				pi = null;  
				Toast.makeText(context, "Stop Smart Alarm" , Toast.LENGTH_LONG).show();
				Log.d(this.getClass().getName(), " Old Alarm is cancel ");
			}
		}
		else if(intent.getAction().equals(Intent.ACTION_CAMERA_BUTTON)) {
						  
			Toast.makeText(context, "Camera is clicked" , Toast.LENGTH_LONG).show();
			
		}	
		 		
	}

}
